openapi: "3.0.2"
info:
  title: New example
  version: "1.0"
servers:
  - url: http://localhost:8080
components:
  schemas:
    cat:
      description: a single cat
      type: object
      properties:
        name:
          type: string
          description: how you call a cat
          example: Garfield
        colors:
          type: string
          description: one of more colors
          example: black and white
        role:
          type: string
          description: what a cat does
          example: career coach
        id:
          type: string
          description: registry number in the cat ministry
          example: ABC123XYZ
      required:
        - name
        - colors
        - id
    cats-list:
      description: a list of cats
      type: object
      properties:
        cats:
          type: array
          items:
            $ref: '#/components/schemas/cat'
    update-cat:
      description: updatable fields of a cat
      type: object
      properties:
        role:
          type: string
paths:
  /api/cats:
    get:
      description: search for cats
      operationId: searchCats
      parameters:
        - name: name
          in: query
          schema:
            type: string
          required: false
        - name: role
          in: query
          schema:
            type: string
          required: false
      responses:
        '200':
          description: at least one cat exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/cats-list'
        '204':
          description: No cats found
    post:
      description: add a cat
      operationId: addCat
      requestBody:
        description: cat to be added
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/cat'
      responses:
        '200':
          description: Cat added successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/cat'
        '400':
          description: Bad request

  /api/cats/{id}:
    patch:
      description: Update cat's role
      operationId: updateRole
      parameters:
      - name: id
        in: path
        schema:
          type: string
        required: true
      requestBody:
        description: role to be patched
        content:
          application/json:
            schema:
              $ref: '#/components/schema/update-cat'
      responses:
        '200':
          description: Cat's role updated successfully
            content:
              application/json:
                schema:
                  $ref: '#/components/schema/cat'
        '204':
          description: Cat not found
        '400':
          description: Bad request
    delete:
      description: delete a cat by its id
      operationId: deleteCat
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '202':
          description: Cat delete request accepted
        '204':
          description: Cat not found







